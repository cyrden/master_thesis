#!/usr/bin/python

"""
Custom topology for IPMininet, generated by GraphML-Topo-to-IPMininet-Network-Generator.
"""
from mininet.log import lg

import subprocess
import ipmininet
from ipmininet.cli import IPCLI
from ipmininet.ipnet import IPNet
from ipmininet.iptopo import IPTopo
from ipmininet.link import IPIntf


class SimpleOSPFNet(IPTopo):

    def build(self, *args, **kwargs):


        # add nodes, switches first...
        Louvain_la_Neuve = self.addRouter_v4( 'r0' )
        Charleroi = self.addRouter_v4( 'r1' )
        Arlon = self.addRouter_v4( 'r2' )
        Namur = self.addRouter_v4( 'r3' )
        Antwerpen2 = self.addRouter_v4( 'r4' )
        Antwerpen1 = self.addRouter_v4( 'r5' )
        Mons = self.addRouter_v4( 'r6' )
        Korthijk = self.addRouter_v4( 'r7' )
        Gent2 = self.addRouter_v4( 'r8' )
        Gent1 = self.addRouter_v4( 'r9' )
        Liege1 = self.addRouter_v4( 'r10' )
        Liege2 = self.addRouter_v4( 'r11' )
        Brugge = self.addRouter_v4( 'r12' )
        Geel = self.addRouter_v4( 'r13' )
        Hasselt = self.addRouter_v4( 'r14' )
        Leuven2 = self.addRouter_v4( 'r15' )
        Leuven1 = self.addRouter_v4( 'r16' )
        Vilvoorde = self.addRouter_v4( 'r17' )
        Evere = self.addRouter_v4( 'r18' )
        BrusselsScience = self.addRouter_v4( 'r19' )
        BrusselsCampus = self.addRouter_v4( 'r20' )

        # ... and now hosts
        Louvain_la_Neuve_host = self.addHost( 'h0' )
        Charleroi_host = self.addHost( 'h1' )
        Arlon_host = self.addHost( 'h2' )
        Namur_host = self.addHost( 'h3' )
        Antwerpen2_host = self.addHost( 'h4' )
        Antwerpen1_host = self.addHost( 'h5' )
        Mons_host = self.addHost( 'h6' )
        Korthijk_host = self.addHost( 'h7' )
        Gent2_host = self.addHost( 'h8' )
        Gent1_host = self.addHost( 'h9' )
        Liege1_host = self.addHost( 'h10' )
        Liege2_host = self.addHost( 'h11' )
        Brugge_host = self.addHost( 'h12' )
        Geel_host = self.addHost( 'h13' )
        Hasselt_host = self.addHost( 'h14' )
        Leuven2_host = self.addHost( 'h15' )
        Leuven1_host = self.addHost( 'h16' )
        Vilvoorde_host = self.addHost( 'h17' )
        Evere_host = self.addHost( 'h18' )
        BrusselsScience_host = self.addHost( 'h19' )
        BrusselsCampus_host = self.addHost( 'h20' )

        # add edges between switch and corresponding host
        self.addLink( Louvain_la_Neuve , Louvain_la_Neuve_host )
        self.addLink( Charleroi , Charleroi_host )
        self.addLink( Arlon , Arlon_host )
        self.addLink( Namur , Namur_host )
        self.addLink( Antwerpen2 , Antwerpen2_host )
        self.addLink( Antwerpen1 , Antwerpen1_host )
        self.addLink( Mons , Mons_host )
        self.addLink( Korthijk , Korthijk_host )
        self.addLink( Gent2 , Gent2_host )
        self.addLink( Gent1 , Gent1_host )
        self.addLink( Liege1 , Liege1_host )
        self.addLink( Liege2 , Liege2_host )
        self.addLink( Brugge , Brugge_host )
        self.addLink( Geel , Geel_host )
        self.addLink( Hasselt , Hasselt_host )
        self.addLink( Leuven2 , Leuven2_host )
        self.addLink( Leuven1 , Leuven1_host )
        self.addLink( Vilvoorde , Vilvoorde_host )
        self.addLink( Evere , Evere_host )
        self.addLink( BrusselsScience , BrusselsScience_host )
        self.addLink( BrusselsCampus , BrusselsCampus_host )

        # add edges between switches
        self.addLink( Louvain_la_Neuve , Charleroi)
        self.addLink( Louvain_la_Neuve , Namur)
        self.addLink( Charleroi , Mons)
        self.addLink( Arlon , Liege2)
        self.addLink( Arlon , Namur)
        self.addLink( Antwerpen2 , Evere)
        self.addLink( Antwerpen2 , Antwerpen1)
        self.addLink( Antwerpen2 , Antwerpen1)
        self.addLink( Antwerpen1 , Gent2)
        self.addLink( Mons , Vilvoorde)
        self.addLink( Korthijk , Vilvoorde)
        self.addLink( Korthijk , Brugge)
        self.addLink( Gent2 , Gent1)
        self.addLink( Gent2 , Gent1)
        self.addLink( Gent1 , Brugge)
        self.addLink( Liege1 , Evere)
        self.addLink( Liege1 , Liege2)
        self.addLink( Liege1 , Liege2)
        self.addLink( Geel , Vilvoorde)
        self.addLink( Geel , Hasselt)
        self.addLink( Hasselt , Leuven2)
        self.addLink( Leuven2 , Leuven1)
        self.addLink( Leuven2 , Leuven1)
        self.addLink( Leuven1 , Evere)
        self.addLink( Vilvoorde , Evere)
        self.addLink( Vilvoorde , Evere)
        self.addLink( Vilvoorde , Evere)
        self.addLink( Vilvoorde , Evere)
        self.addLink( Vilvoorde , BrusselsCampus)
        self.addLink( Evere , BrusselsScience)
        self.addLink( BrusselsScience , BrusselsCampus)

	super(SimpleOSPFNet, self).build(*args, **kwargs)

    def addRouter_v4(self, name):
        return self.addRouter(name, use_v4=True, use_v6=False)


ipmininet.DEBUG_FLAG = True
lg.setLogLevel("info")

# Start network
net = IPNet(topo=SimpleOSPFNet(), use_v4=True, use_v6=False, allocate_IPs=True)
net.start()
IPCLI(net)
net.stop()
